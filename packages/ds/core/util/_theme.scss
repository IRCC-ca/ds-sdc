@use "../tokens/template-const"as template-const;
@mixin color-scheme($light, $dark, $all: ()) {
    @media(prefers-color-scheme: dark) {
        @include tokens-for-map($dark);
        &[theme=light] {
            @include tokens-for-map($light);
        }
    }
    @media(prefers-color-scheme: light) {
        @include tokens-for-map($light);
        &[theme=dark] {
            @include tokens-for-map($dark);
        }
    }
    @include tokens-for-map($all);
}

@mixin light {
    @at-root {
        #{template-const.$root-selectors} {

            @media(prefers-color-scheme: light) {
                @content;
            }

            @media(prefers-color-scheme: dark) {
                &[theme=light] {
                    @content;
                }
            }
        }
    }
}

@mixin dark {
    @at-root {
        #{template-const.$root-selectors} {
            @media(prefers-color-scheme: dark) {
                @content;
            }

            @media(prefers-color-scheme: light) {
                &[theme=dark] {
                    @content;
                }
            }
        }
    }
}
@mixin tokens-for-map($map) {
    @each $property, $token in $map {
        #{$property}: #{$token};
    }
}
@mixin selector ($value, $attribute, $default) {
    @if $value==$default {

        &:where(:not([#{$attribute}])),
        &:where([#{$attribute}="#{$value}"]) {
            @content;
        }
    }

    @else {
        &:where([#{$attribute}="#{$value}"]) {
            @content;
        }
    }
}