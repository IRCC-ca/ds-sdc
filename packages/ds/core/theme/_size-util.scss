@import "../util/string";
@import "../util/list";

@mixin varsForMap($size-map, $str-prefix: "") {
  @each $key, $value in $size-map {
    @if type-of($value) == map {
      // recurse downwards
      @include varsForMap($value, #{$str-prefix}-#{$key});
    } @else {
      #{$key}: $value;
    }
  }
}

@mixin create-component-sizes($component-map, $sizes, $default-size) {
  #{map-get($component-map, selectors)} {
    @include varsForMap(map-get($component-map, map, all));
    @include varsForMap(map-get($component-map, map, $default-size));

    $specified-sizes: list-filter($sizes, $default-size);
    $specified-sizes: list-filter($specified-sizes, all);

    @each $specified-size in $specified-sizes {
      &[size="#{$specified-size}"] {
        @include varsForMap(map-get($component-map, map, $specified-size));
      }
    }
  }
}

@mixin core($size-maps, $sizes, $default-size) {
    @each $component-name, $component-map in $size-maps {
      @include create-component-sizes($component-map, $sizes, $default-size);
    }
}
