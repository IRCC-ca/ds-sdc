@use './typography/fonts' as fonts;
@use './typography/typography' as typography;
@use './paint/paint' as paint;
@use './theme/theme' as theme;
@use './tokens/link/link' as link;
@use './tokens/partial/focus' as focus;
@use './tokens/partial/disable' as disable;
@use './tokens/button/primary' as button-primary;
@use './tokens/button/secondary' as button-secondary;
@use './tokens/button/plain' as button-plain;
@use './tokens/button/round' as button-round;
@use './tokens/checkbox/checkbox' as checkbox;

/// Default theme, should be included for most applications, and can be customized through the parameters
/// @param {String} $palette ('default') - the palette from the theme to construct the components with
/// @param {String} $size ('large') - The text size to default to,
/// Client-facing applications should be constructed with large text
/// Officer-facing applications should be constructed with small text.
@mixin default($palette: 'default', $size: 'large') {
    @include create-globals($palette, $size);
    @include create-item-layouts();
}

/// the global level tokens to construct layouts
/// @param {String} $palette ('default') - the palette from the theme to construct the components with
/// @param {String} $size ('large') - The text size to default to,
/// Client-facing applications should be constructed with large text
/// Officer-facing applications should be constructed with small text.
@mixin create-globals($palette, $size) {
    @include theme.default($palette, $size);
    @include fonts.create();
}

/// the item level tokens to construct layouts
@mixin create-item-layouts() {
    @include typography.create();
    @include paint.create();
    @include link.create();
    @include button-primary.create();
    @include button-secondary.create();
    @include button-plain.create();
    @include button-round.create();

    @include focus.create();

    @include disable.create();
    @include checkbox.create();
}
