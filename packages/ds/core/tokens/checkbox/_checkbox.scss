@use '../../util/color' as color;
@use '../../util/theme' as theme;
@use '../../util/device' as device;
@use '../../util/size' as size;
@use '../template-const' as template-const;
@use '../sizes' as token-size;

@mixin selector {
    [type='checkbox'] {
        @content;
    }
}

@mixin checkbox($valid, $invalid) {
    @at-root {
        #{template-const.$root-selectors} {
            @include theme.light {
                @include selector {
                    @include theme.tokens-for-map(
                        (
                            --formcontrol-disabled: color.mix-token($valid, 300), 
                            --formcontrol: color.mix-token($valid, 700), 
                            --formcontrol-hover: color.mix-token($valid, 800),
                            --formcontrol-critical-background: color.mix-token($invalid, 100), 
                            --formcontrol-critical-hover: color.mix-token($invalid, 200),
                            --critical-background-weak-active: color.mix-token($invalid, 300),
                            --formcontrol-error: color.mix-token($invalid, 700),
                            --formcontrol-critical-border: color.mix-token($invalid, 800),
                            --critical-active: color.mix-token($invalid, 900)
                        )
                    )
                }
            }

            @include theme.dark {
                @include selector {
                    @include theme.tokens-for-map(
                        (
                            --formcontrol: color.mix-token($valid, 600),
                            --formcontrol-disabled: color.mix-token($valid, 1000), 
                            --formcontrol-hover: color.mix-token($valid, 900),
                            --formcontrol-critical-background: color.mix-token($invalid, 1200), 
                            --formcontrol-critical-hover: color.mix-token($invalid, 1100),
                            --critical-background-weak-active: color.mix-token($invalid, 1000),
                            --formcontrol-error: color.mix-token($invalid, 600),
                            --formcontrol-critical-border: color.mix-token($invalid, 500),
                            --critical-active: color.mix-token($invalid, 400)
                        )
                    );
                }
            }
        }
    }
}

@mixin create {
    @at-root {
        #{template-const.$root-selectors} {
            @include selector() {
                @include layout();
            }
        }
    }
}

@mixin layout {
    border-radius: token-size.$border-radius;
    appearance: none;
    // TODO: Update this once the PR for radio is in
    margin: 0 12px;
    // outline: 0;
    box-sizing: border-box;
    box-shadow: token-size.$border-style;
    vertical-align: top;

    @include checkbox-size();

    @include device.if-hover {
        color: var(--formcontrol-hover);
    }

    &::before {
        content: '';
        display: block;
    }

    &:enabled {
        &:active {
            --background-color: var(--generic-active);
        }
    }

    &:disabled {
        --background: var(--border-disabled);
        
        & + label {
            color: var(--text-disabled);
        }
    }

    @include checked();
    // @include invalid();
    @include mixed-state();
}

@mixin checked {
    &:checked  {

        --border: var(--formcontrol); 
        background: var(--formcontrol);

        // draw the checkmark
        &::before { 
            text-align: center;
            display: inline-block;
            width: token-size.$relative-0-5;
            height: token-size.$relative-1;
            margin: 0 6px;
            border: solid var(--surface1);
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        &:enabled {
            @include device.if-hover {
                --border: var(--formcontrol-hover);
            }

            &:active {
                --border: var(--formcontrol-hover);
            }
        }
    }
}

@mixin invalid {
    --formcontrol: var(--formcontrol-error);
    
    --background-color: var(--formcontrol-critical-background);

    &:enabled {
        @include device.if-hover {
            --border: var(--formcontrol-critical-border);
            --background-color: var(--formcontrol-critical-hover);
        }

        &:active {
            --border: var(--formcontrol-critical-border);
            --background-color: var(--critical-background-weak-active);
         }
    }
}

@mixin mixed-state {
   
}

@mixin checkbox-size {
    @include size.selector(small) {
        width: token-size.$relative-1-25;
        height: token-size.$relative-1-25;

        @extend .body3;
    }

    @include size.selector(large) {
        width: token-size.$relative-1-5;
        height: token-size.$relative-1-5;

        @extend .body2;
    }
}