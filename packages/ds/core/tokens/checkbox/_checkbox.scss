@use '../../util/color' as color;
@use '../../util/theme' as theme;
@use '../../util/device' as device;
@use '../../util/size' as size;
@use '../template-const' as template-const;
@use '../sizes' as token-size;

@mixin selector {
    [type='checkbox'] {
        @content;
    }
}

@mixin create {
    @at-root {
        #{template-const.$root-selectors} {
            @include selector() {
                @include layout();
            }
        }
    }
}

@mixin layout {
    border-radius: token-size.$border-radius;
    appearance: none;
    margin: token-size.$form-control-margin;
    outline: 0;
    box-sizing: border-box;
    box-shadow: token-size.$border-style;
    vertical-align: top;

    @include checkbox-size();

    @include device.if-hover {
        color: var(--formcontrol-hover);
    }

    &:disabled {
        --border: var(--border-disabled);
        
        & + label {
            color: var(--text-disabled);
        }
    }

    &:enabled {
        &:active {
            --background-color: var(--generic-active);
        }
    }

    @include checked();
    @include invalid();
    @include mixed-state();
}

@mixin checked {
    &:checked  {
        --border: var(--formcontrol); 
        background: var(--formcontrol);

        // draw the checkmark

        &::before { 
            content: '\f00c';
            // TODO: create mixin? 
            color: var(--surface1);
            position: relative;

            @extend .fa-regular;
        }

        &:disabled {
            --border: var(--formcontrol-disabled);
            background: var(--formcontrol-disabled);
        }

        &:enabled {
            @include device.if-hover {
                --border: var(--formcontrol-hover);
            }

            &:active {
                --border: var(--formcontrol-hover);
            }
        }
    }
}

@mixin invalid {
    &:invalid{
        --formcontrol: var(--critical-border);
        --background: var(--formcontrol-critical-background);
    
        &:enabled {
            @include device.if-hover {
                --border: var(--critical-border-hover);
                --background: var(--formcontrol-critical-hover);
            }
    
            &:active {
                --border: var(--critical-background-active);
                --background-color: var(--critical-background-weak-active);
             }
        }
    }
}

@mixin mixed-state {
    &:indeterminate{
        background: var(--formcontrol);
        
        &::before {
            content: '\f068';
            // TODO: create mixin? 
            color: var(--surface1);
            position: relative;

            @extend .fa-regular;
        }

        &:disabled {
            --border: var(--formcontrol-disabled);
            background: var(--formcontrol-disabled);
        }

        &:enabled {
            @include device.if-hover {
                --border: var(--formcontrol-hover);
            }

            &:active {
                --border: var(--formcontrol-hover);
            }
        }
    }
}

@mixin checkbox-size {
    @include size.selector(small) {
        width: token-size.$relative-1-25; 
        height: token-size.$relative-1-25;

        &:checked::before {
            @include icon-small();
        }

        &:indeterminate::before{
            @include icon-small();
        }

        @extend .body3;
    }

    @include size.selector(large) {
        width: token-size.$relative-1-5;
        height: token-size.$relative-1-5;

        &:checked::before {
            @include icon-large();
        }

        &:indeterminate::before {
            @include icon-large();
        }

        @extend .body2;
    }
}

// TODO: fix this
@mixin icon-small {
    width: 14px;
    height: 16px;
    left: calc(50% - 14px/2);
    top: calc(50% - 16px/2);
    font-size: 16px;
}

// TODO: fix this
// NOTE: use px or rem?
@mixin icon-large {
    width: 18px;
    height: 20px;
    left: calc(50% - 18px/2);
    top: calc(50% - 20px/2);
    font-size: 20px;
}
