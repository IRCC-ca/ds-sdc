@use '../../util/color' as color;
@use '../../util/theme' as theme;
@use '../template-const' as template-const;
@use '../sizes' as sizes;
@use '../../util/device' as device;
@use 'sass:map';

@mixin tokens($palette, $visited-palette) {
    @include theme.light {
        @include device.if-hover {
            --text-hover: #{color.mix-token($palette, 800)};
        }
        --text: #{color.mix-token($palette, 700)};
        --text-active: #{color.mix-token($palette, 900)};
        --text-visited: #{color.mix-token($visited-palette, 700)};
    }

    @include theme.dark {
        @include device.if-hover {
            --text-hover: #{color.mix-token($palette, 500)};
        }
        --text: #{color.mix-token($palette, 600)};
        --text-active: #{color.mix-token($palette, 400)};
        --text-visited: #{color.mix-token($visited-palette, 600)};
    }
}

@mixin anchor-selector {
    a,
    .link {
        &#{template-const.$escape} {
            @content;
        }
    }
}

@mixin create(
    $palette: (
        unvisited: cta,
        visited: visited,
    )
) {
    @include anchor-selector() {
        @include tokens(
            map.get($palette, unvisited),
            map.get($palette, visited)
        );
        @include layout();
    }
}

@mixin layout {
    border-radius: sizes.$border-radius;
    padding: sizes.$fixed-2 sizes.$fixed-4;
    display: inline;

    &:link {
        color: var(--text);
    }
    @include device.if-hover {
        color: var(--text-hover);
        background-color: var(--generic-hover);
    }

    &:focus {
        box-shadow: none;
        outline-offset: 0;
    }

    &:active {
        color: var(--text-active);
        background-color: var(--generic-active);
    }

    &:visited {
        color: var(--text-visited);
    }
}
