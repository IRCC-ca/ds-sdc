@use '../util/color' as color;
@use '../util/theme' as theme;
@use '../util/size' as size;
@use '../util/device' as device;
@use './template-const' as template-const;
@use './sizes' as token-size;

@mixin selector {
    input[type='radio'] {
        @content;
    }
}

@mixin radiobutton($palette, $focus, $critical) {
    @at-root {
        #{template-const.$root-selectors} {
            // TODO: clean this section
            @include theme.light {
                @include selector {
                    @include device.if-hover {
                        --text-hover: #{color.mix-token($palette, 800)};
                    }
                }
            }
            // TODO: clean this section
            @include theme.dark {
                @include selector {
                    @include device.if-hover {
                        --text-hover: #{color.mix-token($palette, 500)};
                    }
                }
            }
        }
    }
}

@mixin create {
    @at-root {
        #{template-const.$root-selectors} {
            @include selector() {
                @include layout();
            }
        }
    }
}

@mixin layout {
    border-radius: 99999px;
    appearance: none;
    margin: 0 12px;
    aspect-ratio: 1 / 1;
    box-sizing: border-box;
    border: 1px solid var(--border-disabled);
    
    @include radiobutton-size();

    @include device.if-hover {
        color: var(--formcontrol-hover);
    }

    &:hover  {
        border: 1px solid var(--border-hover);
    }

    // Disabled state
    &:disabled {
        border: 1px solid var(--border-disabled);
        background-color: var(--surface1);

        & + label {
            color: var(--text-disabled);
        }
    }

    // Checked state
    &:checked {
        border: 6px solid var(--formcontrol);

        &:active, &:hover {
            border: 6px solid var(--formcontrol-hover);
            background-color: var(--surface1);
        }

        &:disabled {
            border: 6px solid var(--formcontrol-disabled);
            background-color: var(--surface1);
        }
    }

    &:active {
        border: 1px solid var(--border);
        background-color: var(--generic-active);

        &:disabled {
            border: 1px solid var(--border-disabled);
            background-color: var(--surface1);
        }
    }
        
    // error states
     &:required, &:invalid {
        border: 1px solid var(--formcontrol-error);
        background-color: var(--formcontrol-critical-background);
        
        &:hover {
            border: 1px solid var(--formcontrol-critical-border);
            background-color: var(--formcontrol-critical-hover);
        }

        &:active {
            border: 1px solid var(--formcontrol-critical-border);
            background-color: var(--formcontrol-critical-disabled);
         }

         &:disabled {
            border: 1px solid var(--critical-border-disabled);
            background-color: var(--critical-background-weak-disabled);
         }

         &:checked {
            border: 6px solid var(--formcontrol-error);
            background-color: var(--surface1);

            &:active {
                border: 6px solid var(--critical-active);
            }

            &:hover {
                border: 6px solid var(--formcontrol-critical-border);
            }

            &:disabled {
                border: 6px solid var(--formcontrol-critical-disabled);
                background-color: var(--surface1);
            }
         }
    }   
}

@mixin radiobutton-size {
    @include size.selector(small) {
        height: token-size.$relative-1-25;
        width: token-size.$relative-1-25;

        & + label {
            // content:'';
            color:red;
            @extend .body3;
        }
    }

    @include size.selector(large) {
        height: token-size.$relative-1-5;
        width: token-size.$relative-1-5;

        & + label {
            // content: '';
            color: green;
            @extend .body2
        } 
    }
}