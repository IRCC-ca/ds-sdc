@use '../../util/color' as color;
@use '../text' as text;
@use '../../util/theme' as theme;
@use '../template-const' as template-const;
@use './button-const' as button-const;
@use '../../util/device' as device;
@use '../sizes' as sizes;

$plain: 'plain';

@mixin tokens($palette) {
    @include theme.light {
        @include button-const.selectors() {
            @include button-const.button($category: $plain, $color: $palette) {
                --text: #{color.mix-token($palette, 700)};
                --text-disabled: #{color.mix-token($palette, 300)};
            }
        }
    }
    @include theme.dark {
        @include button-const.selectors() {
            @include button-const.button($category: $plain, $color: $palette) {
                --text: #{color.mix-token($palette, 600)};
                --text-disabled: #{color.mix-token($palette, 1000)};
            }
        }
    }
}

@mixin button-plain($palette) {
    @include button-const.selectors() {
        @include button-const.button($category: $plain, $color: $palette) {
            @include tokens($palette);
        }
    }
}

@mixin create() {
    @include button-const.selectors() {
        @include button-const.layout();
        @include button-const.button($category: $plain, $color: null) {
            @include layout();
        }
    }
}

@mixin layout() {
    background-color: var(--generic);
    color: var(--text);
    @include device.if-hover {
        background: var(--generic-hover);
    }

    &:active {
        background: var(--generic-active);
    }

    &:disabled {
        --text: var(--text-disabled);
        color: var(--text);
        background: var(--generic);
    }
}
