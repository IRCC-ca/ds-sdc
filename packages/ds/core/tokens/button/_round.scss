@use '../../util/color' as color;
@use '../text' as text;
@use '../../util/theme' as theme;
@use '../template-const' as template-const;
@use './button-const' as button-const;
@use '../../util/device' as device;
@use '../sizes' as sizes;

$round: 'round';
$default-color: '';

@mixin tokens($palette: cta) {
    @include theme.select-attribute($palette, color, $default-color) {
        @include theme.light {
            --text: #{color.mix-token($palette, 700)};
            --text-disabled: #{color.mix-token($palette, 300)};
        }

        @include theme.dark {
            --text: #{color.mix-token($palette, 400)};
            --text-disabled: #{color.mix-token($palette, 900)};
        }
    }
}

@mixin create(
    $palette: (
        cta,
        critical,
    )
) {
    @include button-const.selectors {
        &:where([category='#{$round}']) {
            @each $key in $palette {
                @if not $default-color {
                    $default-color: $key !global;
                }
                @include tokens($key);
            }
            
            @include layout();
        }
    }
}

@mixin layout() {
    @include button-const.layout-round();

    background-color: var(--generic);
    @include device.if-hover {
        background-color: var(--generic-hover);
    }

    &:active {
        background-color: var(--generic-active);
    }

    &:disabled {
        --text: var(--text-disabled);

        background-color: var(--generic);
    }
}
