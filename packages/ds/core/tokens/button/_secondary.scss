@use '../../util/color' as color;
@use '../text' as text;
@use '../../util/theme' as theme;
@use '../template-const' as template-const;
@use './button-const' as button-const;
@use '../../util/device' as device;
@use '../sizes' as sizes;

@mixin button-secondary($palette) {
    @include button-const.selectors() {
        @include button-const.button($category: 'secondary', $color: null) {
            --border: var(--text);
        }
    }
    @include theme.light {
        #{button-const.$selectors} {
            @include button-const.button(
                $category: 'secondary',
                $color: $palette
            ) {
                @include device.if-hover {
                    --border-hover: #{color.mix-token($palette, 800)};
                }
                --text: #{color.mix-token($palette, 700)};
                --text-disabled: #{color.mix-token($palette, 300)};
                --border-active: #{color.mix-token($palette, 900)};
            }
        }
    }

    @include theme.dark {
        #{button-const.$selectors} {
            @include button-const.button(
                $category: 'secondary',
                $color: $palette
            ) {
                @include device.if-hover {
                    --border-hover: #{color.mix-token($palette, 500)};
                }
                --text: #{color.mix-token($palette, 600)};
                --text-disabled: #{color.mix-token($palette, 1000)};
                --border-active: #{color.mix-token($palette, 400)};
            }
        }
    }
}

@mixin create() {
    @include button-const.selectors() {
        @include button-const.layout();
        @include button-const.button($category: 'secondary', $color: null) {
            @include layout();
        }
    }
}

@mixin layout() {
    box-shadow: sizes.$border-style;
    background-color: var(--generic);
    @include device.if-hover {
        background-color: var(--generic-hover);
    }

    &:active {
        background-color: var(--generic-active);
    }

    &:disabled {
        --text: var(--text-disabled);
        color: var(--text);
        background-color: var(--generic);
    }

    &:focus {
        box-shadow: sizes.$border-style, sizes.$focus-shadow;
    }
}
